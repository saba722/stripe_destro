{"version":3,"sources":["login.svg","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/auth/Login.js","components/auth/Register.js","components/layout/Landing.js","components/private-route/PrivateRoute.js","components/utilityComponents/CouponsTable/index.js","components/utilityComponents/ATModal/index.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","userData","email","password","props","loginUser","location","href","nextProps","react_default","a","createElement","className","ref","containerRef","src","loginImg","alt","htmlFor","error","placeholder","onClick","Component","connect","post","then","res","data","setItem","jwt_decode","catch","err","response","Register","newUser","name","password2","registerUser","history","push","withRouter","Landing","isLogginActive","rightSide","classList","add","remove","prevState","_this2","current","currentActive","container","auth_Login","auth_Register","Landing_RightSide","changeState","bind","React","RightSide","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","to","CouponTable","searchText","searchedColumn","Transactions","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","input","node","searchInput","concat","onPressEnter","handleSearch","width","marginBottom","display","space","es_button","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","text","main_default","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","openNotificationWithIcon","message","title","notification","description","duration","deleteCoupon","Axios","couponId","key","handleData","columns","EditFilled","popconfirm","placement","onConfirm","okText","cancelText","okType","DeleteOutlined","userTransactions","userCouponsData","transactions","forEach","transaction","index","sno","couponName","currency","percentOff","percent_off","durationInMonths","duration_in_months","Fragment","table","pagination","dataSource","ATModal","ModalText","confirmLoading","buttonLoading","setData","showModal","handleOk","handleCancel","addCoupon","addDoc","_this$state","modal","onOk","onCancel","centered","footer","es_form","initialValues","remember","amount","transactionType","height","onFinish","textAlign","Item","rules","required","es_select","allowClear","Option","htmlType","Dashboard","onLogoutClick","getAllData","asyncToGenerator","regenerator_default","mark","_callee","result","coupons","wrap","_context","prev","next","sent","console","log","stop","split","borderRadius","letterSpacing","marginTop","atmodal","CouponsTable","utilityComponents_ATModal","jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","exact","path","Switch","private_route_PrivateRoute","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7ead8a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.9a76e74e.svg\";","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"https://stripe-coupons-1.herokuapp.com/api/users/register\", userData)\n    .then(res => history.push(\"/dashboard\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"https://stripe-coupons-1.herokuapp.com/api/users/login\", userData)\n    .then(res => {\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport loginImg from \"../../login.svg\";\nimport \"./style.scss\";\n\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      // this.props.history.push(\"/dashboard\");\n      window.location.href = '/dashboard';\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      window.location.href = '/dashboard';\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginUser(userData);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"base-container\" ref={this.props.containerRef}>\n      <div className=\"header\">Login</div>\n      <div className=\"content\">\n          <div className=\"image\">\n              <img src={loginImg} alt=\"Login\"/>\n          </div>\n          <div className=\"form\">\n              <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\" placeholder=\"Username\" />\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input  \n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\" placeholder=\"Password\" />\n              </div>\n          </div>\n      </div>\n      <div className=\"footer\">\n          <button type=\"button\" className=\"btn\" onClick={this.onSubmit}>Login</button>\n      </div>\n  </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport loginImg from \"../../login.svg\";\nimport \"./style.scss\";\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      // this.props.history.push(\"/dashboard\");\n      window.location.href = '/dashboard';\n\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"base-container\" ref={this.props.containerRef}>\n      <div className=\"header\">Register</div>\n      <div className=\"content\">\n          <div className=\"image\">\n              <img src={loginImg} alt=\"Register\"/>\n          </div>\n          <div className=\"form\">\n              <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <input onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\" placeholder=\"Username\" />\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\" placeholder=\"Email\" />\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input \n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                   placeholder=\"Password\" />\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"password\">Confirm Password</label>\n                  <input \n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                   placeholder=\"Confirm Password\" />\n              </div>\n          </div>\n      </div>\n      <div className=\"footer\">\n          <button type=\"button\" onClick={this.onSubmit} className=\"btn\">Register</button>\n      </div>\n  </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React from 'react';\nimport './style.scss';\nimport Login from '../auth/Login';\nimport Register from '../auth/Register';\nclass Landing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogginActive: true\n    };\n  }\n\n  componentDidMount() {\n    this.rightSide.classList.add(\"right\");\n  }\n\n  changeState() {\n    const { isLogginActive } = this.state;\n    if(isLogginActive) {\n      this.rightSide.classList.remove(\"right\");\n      this.rightSide.classList.add(\"left\");\n    }\n    else {\n      this.rightSide.classList.remove(\"left\");\n      this.rightSide.classList.add(\"right\");\n    }\n\n    this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n  }\n\n  render() {\n    const { isLogginActive } = this.state;\n    const current = isLogginActive ? \"Register\" : \"Login\";\n    const currentActive = isLogginActive ? \"login\" : \"register\";\n    return (\n      <div className=\"App\">\n        <div className=\"login\">\n          <div className=\"container\" ref={ref => (this.container = ref)}>\n            {isLogginActive && (<Login containerRef={ref => (this.current = ref)}/> )}\n            {!isLogginActive && (<Register containerRef={ref => (this.current = ref)}/> )}\n          </div>\n          <RightSide current={current} currentActive={currentActive} containerRef={ref => (this.rightSide = ref)} onClick={this.changeState.bind(this)} />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst RightSide = props => {\n  return (\n    <div className=\"right-side\" ref={props.containerRef} onClick={props.onClick}>\n      <div className=\"inner-container\">\n        <div className=\"text\">\n          {props.current}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Landing;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Table, Input, Button, Space, Popconfirm, notification } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined, EditFilled, DeleteOutlined } from '@ant-design/icons';\n// import { AuthContext } from \"../../../context/Auth\";\n// import ETModal from '../ETModal';\nimport Axios from 'axios';\n\nclass CouponTable extends React.Component {\n  state = {\n    searchText: '',\n    searchedColumn: '',\n    Transactions: [],\n    loading: true,\n  };\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n          text\n        ),\n  });\n   openNotificationWithIcon = (type, message, title) => {\n    notification[type]({\n      message: title,\n      description: message,\n      duration: 2,\n    });\n  };\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\ndeleteCoupon = (e) =>{\nAxios.post(\"https://stripe-coupons-1.herokuapp.com/api/users/deleteCoupon\",{\n  couponId: e.key\n}).then((res)=>{\n  this.openNotificationWithIcon('success','You have successfully deleted the coupon','ERROR')\n  this.props.handleData();\n}).catch((e)=>{\n  this.openNotificationWithIcon('error','Something Went Wrong','ERROR')\n})\n}\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n  // static contextType = AuthContext;\n  render() {\n\n    const columns = [\n      {\n        title: 'SNO',\n        dataIndex: 'sno',\n        key: 'sno',\n        ...this.getColumnSearchProps('sno'),\n      },\n      {\n        title: 'Coupon Name',\n        dataIndex: 'couponName',\n        key: 'couponName',\n        // width: '100%',\n        ...this.getColumnSearchProps('couponName'),\n      },\n      {\n        title: 'Currency',\n        dataIndex: 'currency',\n        key: 'currency',\n        ...this.getColumnSearchProps('currency'),\n        // width: '100%',\n\n      },\n      {\n        title: 'Percent OFF',\n        dataIndex: 'percentOff',\n        key: 'percentOff',\n        ...this.getColumnSearchProps('percentOff'),\n        // width: '100%',\n      },\n      {\n        title: 'duration',\n        dataIndex: 'duration',\n        key: 'duration',\n        ...this.getColumnSearchProps('duration'),\n        // width: '200%',\n      \n      },\n      {\n        title: 'duration In Months',\n        dataIndex: 'durationInMonths',\n        key: 'durationInMonths',\n        ...this.getColumnSearchProps('durationInMonths'),\n      },\n      {\n        render: (e) => (<div style={{display:\"flex\"}}><Button onClick={() => this.openNotificationWithIcon('info',\"You can not edit coupon because it is not editable\",'INFO')}><EditFilled /></Button>\n          <Popconfirm\n            placement=\"bottomRight\"\n            title=\"Are you sure?\"\n            onConfirm={() => this.deleteCoupon(e)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            okType=\"danger\"\n          >\n            <Button><DeleteOutlined /></Button>\n          </Popconfirm></div>)\n      }\n    ];\n    let loading = true;\n    const  userTransactions  = this.props.userCouponsData;\n   \n    let transactions = [];\n    if (userTransactions.length > 0) {\n      userTransactions.forEach((transaction, index) => {\n        transactions.push({\n          key: transaction.id,\n          sno: index + 1,\n          couponName: transaction.name,\n          currency: transaction.currency,\n          percentOff: transaction.percent_off,\n          duration: transaction.duration,\n          durationInMonths: transaction.duration_in_months,\n        })\n      });\n      loading = false;\n    }else{\n      loading = false;\n    }\n\n    return (\n      <>\n        <Table\n          loading={loading}\n          pagination={10}\n          columns={columns}\n          dataSource={transactions}\n          />\n        {/* <ETModal ref={e => this.etmodal = e} /> */}\n      </>\n\n    )\n  }\n}\nexport default CouponTable;","import React from 'react'; \nimport { Modal, Button, Form, Input, Select, Spin, notification } from 'antd';\nimport Axios from 'axios';\nclass ATModal extends React.Component {\n  state = {\n    ModalText: 'Content of the modal',\n    visible: false,\n    confirmLoading: false,\n    loading: false,\n    buttonLoading: false,\n  };\n  setData = (e) => {\n    setTimeout(() => {\n      this.setState({ data: e, loading: false })\n    }, 1000);\n  }\n  showModal = (e) => {\n    this.setState({\n      visible: true,\n      loading: true,  \n    });\n  };\n  openNotificationWithIcon = (type, message, title) => {\n    notification[type]({\n      message: title,\n      description: message,\n      duration: 2,\n    });\n  };\n  handleOk = () => {\n    this.setState({\n      ModalText: 'The modal will be closed after two seconds',\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 1000);\n  };\n\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n      loading: false,\n      data:null,\n      buttonLoading: false,\n    });\n  };\n  addCoupon =  (e) => {\n    this.setState({ buttonLoading: true }, () => {\n      const {couponName,currency,percentOff,duration,durationInMonths,} = e;\n      var addDoc = {\n        couponName,\n        currency,\n        percentOff,\n        duration,\n        durationInMonths,\n      }\n      Axios.post('https://stripe-coupons-1.herokuapp.com/api/users/createCoupon',{addDoc}).then((response)=>{\n        if(!response.data.error){\n          this.openNotificationWithIcon(\"success\",\"You have successfully create a coupon\",\"SUCCESS\");\n          this.handleCancel();\n          this.props.handleData();\n        }else{\n          this.openNotificationWithIcon(\"error\",\"Something Went Wrong\",\"ERROR\");\n        }\n      }).catch((err)=>{\n        this.openNotificationWithIcon(\"error\",\"Something Went Wrong\",\"ERROR\");\n      })\n    })\n\n  }\n  render() {\n    const { visible, confirmLoading, loading, data,buttonLoading, } = this.state;\n\n    return (\n      <>\n        <Modal\n          title=\"Coupon Add\"\n          visible={visible}\n          onOk={this.handleOk}\n          confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n          width=\"90%\"\n          centered={true}\n          footer={loading && null}\n        >\n          {\n            false ? <div style={{ height: \"400px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}><Spin size=\"large\" /></div> : (\n              <Form\n                className=\"login-form\"\n                initialValues={\n                  data && {\n                  remember: false,\n                  description: '',\n                  amount: '',\n                  transactionType: ''\n                }}\n                style={{ width: \"100%\", height: \"400px\" }}\n                onFinish={(e) => this.addCoupon(e)}\n              >\n                <h1 style={{ textAlign: \"center\", }} >ADD Coupon</h1>\n                <Form.Item\n                  name=\"couponName\"\n\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input your Coupon Name!',\n                    }\n                  ]}\n                >\n                  <Input placeholder=\"Coupon Name\" />\n                </Form.Item>\n               \n                <Form.Item name=\"currency\" rules={[{ required: true, message: 'Please provide the currency.' }]} >\n                  <Select\n                    placeholder=\"Select a Currency\"\n                    allowClear\n                  >\n                    <Select.Option value=\"PKR\">PKR</Select.Option>\n                    <Select.Option value=\"USD\">USD</Select.Option>\n                  </Select>\n                </Form.Item>\n                <Form.Item name=\"duration\" rules={[{ required: true, message: 'Please provide the duration.' }]} >\n                  <Select\n                    placeholder=\"Select a Duration\"\n                    allowClear\n                  >\n                    <Select.Option value=\"repeating\">repeating</Select.Option>\n                    {/* <Select.Option value=\"forever\">forever</Select.Option> */}\n                  </Select>\n                </Form.Item>\n                <Form.Item\n                  name=\"percentOff\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input your percent Off',\n                    },\n\n                  ]}\n                >\n                  <Input placeholder=\"Percent OFF\" type=\"number\" />\n                </Form.Item>\n               \n                <Form.Item\n                  name=\"durationInMonths\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input your coupon duration in months',\n                    },\n\n                  ]}\n                >\n                  <Input placeholder=\"Duration In Months\" type=\"number\" />\n                </Form.Item>\n\n                <div style={{ textAlign: \"center\" }}>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" loading={buttonLoading}>\n                   Add Coupon\n            </Button>\n                </div>\n              </Form>\n            )\n          }\n\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default ATModal","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Axios from \"axios\";\nimport CouponTable from \"../utilityComponents/CouponsTable\";\nimport ATModal from \"../utilityComponents/ATModal\";\n\nclass Dashboard extends Component {\n  constructor() {\n    super()\n    this.state = {\n      coupons: []\n    }\n  }\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  getAllData = async () => {\n    const result = await Axios.post(\"https://stripe-coupons-1.herokuapp.com/api/users/getAllCoupons\");\n    let coupons = result.data.coupons || [];\n    console.log(coupons)\n   this.setState({coupons});\n  }\n  async componentDidMount() {\n    this.getAllData()\n  }\n  render() {\n    const { user } = this.props.auth;\n\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"landing-copy col s12 center-align\">\n            <h4>\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\n              <p className=\"flow-text grey-text text-darken-1\">\n                You are logged into a Stripe Coupon{\" \"}\n                {/* <span style={{ fontFamily: \"monospace\" }}>MERN</span> app 👏 */}\n              </p>\n            </h4>\n            <button\n              style={{\n                width: \"250px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.0px\",\n                marginTop: \"1rem\"\n              }}\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Logout\n            </button><br />\n            <button\n              style={{\n                width: \"250px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.0px\",\n                marginTop: \"1rem\"\n              }}\n              onClick={() => this.atmodal.showModal()}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n             Add Coupon\n            </button>\n          </div>\n        </div>\n        <CouponTable userCouponsData={this.state.coupons} handleData={this.getAllData} />\n        <ATModal ref={e => this.atmodal = e} handleData={this.getAllData} />\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nimport \"./App.css\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"/\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Route exact path=\"/\" component={Landing} />\n            {/* <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} /> */}\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}